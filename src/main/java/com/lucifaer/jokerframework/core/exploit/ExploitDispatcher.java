package com.lucifaer.jokerframework.core.exploit;

import com.lucifaer.jokerframework.core.context.ShellContext;
import com.lucifaer.jokerframework.core.exception.ExploitNotFound;
import com.lucifaer.jokerframework.core.exception.JokerException;
import com.lucifaer.jokerframework.core.factory.ExploitFactory;
import com.lucifaer.jokerframework.core.filter.ExploitFilter;
import com.lucifaer.jokerframework.core.shell.ShellThrowableHandler;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class ExploitDispatcher {
    @Autowired
    ExploitFactory exploitFactory;

    @Autowired
    ExploitFilter exploitFilter;

    @Autowired
    ShellThrowableHandler shellThrowableHandler;

    public JokerExploit dispatch(ShellContext shellContext) {
        JokerExploit exploit = null;
        try {
            if (exploitFilter.basicFilter(shellContext)) {
                String exploitName = shellContext.getParams().get("exploitName");
                for (String existkey : exploitFactory.getExistMap().keySet()) {
                    if (exploitName.equals(existkey)) {
                        exploit = exploitFactory.getExistMap().get(exploitName);
                    }
                }

                if (exploit == null) {
                    throw new ExploitNotFound(exploitName);
                }
            }
        } catch (JokerException e) {
            shellThrowableHandler.handleThrowable(e);
        }
        return exploit;
    }
}
