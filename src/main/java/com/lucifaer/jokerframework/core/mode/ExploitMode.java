package com.lucifaer.jokerframework.core.mode;

import com.lucifaer.jokerframework.data.BaseExploitDataModel;
import com.lucifaer.jokerframework.modules.Payload;
import com.lucifaer.jokerframework.utils.ClassUtil;

import java.lang.reflect.Method;
import java.util.Map;

public class ExploitMode implements BaseMode {
    public static void initModel(Map<String, String> options) throws Exception {
        Map<String, Class> modelMap = ClassUtil.getAllClassByAbstractClass(BaseExploitDataModel.class);
        Class<?> model = null;

        for (String className : modelMap.keySet()) {
            String key = className.toLowerCase();
            if (key.startsWith(options.get("exploitName"))) {
                model = Class.forName(modelMap.get(className).getName());
                if (model == null) {
                    System.err.println("[Error] Can't find exploit named " + options.get("exploitName"));
                    System.exit(-1);
                }
            }
        }

        assert model != null;
        Method initMethod = model.getMethod("init", Map.class);
        initMethod.invoke(null, options);
    }

    public static Payload initPayload() throws Exception {
        Map<String, Class> payloadMap = ClassUtil.getAllClassByInterface(Payload.class);
        String exploitName = BaseExploitDataModel.exploitName;
        String exploitModeName = BaseExploitDataModel.exploitModeName;

        for (String className : payloadMap.keySet()) {
            String key = className.toLowerCase();
            if (key.equals(exploitName+exploitModeName)) {
                return (Payload) payloadMap.get(className).newInstance();
            }
        }
        return null;
    }
}
