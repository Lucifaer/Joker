package com.lucifaer.jokerframework.core.command;

import com.lucifaer.jokerframework.core.WiringBeans;
import com.lucifaer.jokerframework.core.mode.ExploitMode;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import picocli.CommandLine;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.Callable;

@CommandLine.Command(name = "exploit mode", mixinStandardHelpOptions = true)
public class ExploitCommand implements Callable {

    @CommandLine.Option(names = {"-t", "--targetUrl"}, required = true)
    private String targetUrl;

    @CommandLine.Option(names = {"-i", "--installUrl"}, required = true, description = "")
    private String installUrl;

    @CommandLine.Option(names = {"-cmd", "--command"}, required = true, description = "")
    private String command;

//    @CommandLine.ArgGroup(exclusive = false, multiplicity = "2")
//    private Exclusive exclusive;

//    static class Exclusive {
//        @CommandLine.Option(names = {"-i ", "--installUrl"}, required = false, description = "")
//        String installUrl;
//
//        @CommandLine.Option(names = {"-cmd", "--command"}, required = true, description = "")
//        String command;
//    }

    @CommandLine.Parameters(paramLabel = "String", description = "exploitName", index = "0")
    private String exploitName;

    @CommandLine.Parameters(paramLabel = "String", description = "which action do you wanna exploit", defaultValue = "command", index = "1")
    private String exploitModeName;

    @Override
    public Object call() throws Exception {
        Map<String, String> options = new HashMap<>();
        options.put("exploitName", exploitName);
        options.put("exploitModeName", exploitModeName);
        options.put("targetUrl", targetUrl);
        options.put("installUrl", installUrl);
        options.put("command", command);
        ExploitMode.initModel(options);
        AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(WiringBeans.class);
        context.getBean("execute");
        return null;
    }
}
