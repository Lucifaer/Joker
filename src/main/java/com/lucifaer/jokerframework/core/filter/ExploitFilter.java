package com.lucifaer.jokerframework.core.filter;

import com.lucifaer.jokerframework.core.context.ShellContext;
import com.lucifaer.jokerframework.core.exception.ContextTypeError;
import com.lucifaer.jokerframework.core.exception.JokerException;
import com.lucifaer.jokerframework.core.exception.ParamsNotFound;
import com.lucifaer.jokerframework.core.exploit.JokerExploit;
import com.lucifaer.jokerframework.core.server.JokerServer;
import com.lucifaer.jokerframework.core.shell.ShellHelper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@Component
public class ExploitFilter implements JokerFilter<JokerExploit> {
    @Autowired
    ShellHelper shellHelper;

    @Override
    public boolean basicFilter(ShellContext shellContext) throws JokerException {
        boolean basicFlag = false;
        String contextType = shellContext.getContextType();
        if ("exploit".equals(contextType)) {
            Map<String, String> params = shellContext.getParams();
            if (params.containsKey("exploitName")) {
                basicFlag = true;
            }
            else {
                throw new ParamsNotFound("exploitName");
            }
        }
        else {
            throw new ContextTypeError("exploit", contextType);
        }
        return basicFlag;
    }

    @Override
    public List<String> paramsFilter(JokerExploit exploit, ShellContext shellContext) {
        Map<String, String> params = shellContext.getParams();
        Map<String, String> exploitParams = exploit.getExpectedParams();
        List<String> errorParams = new ArrayList<>();

        if (params.containsKey("targetUrl") && params.get("targetUrl") != null) {
            exploit.setTargetUrl(params.get("targetUrl"));
        }

        if (params.containsKey("targetPort") && params.get("targetPort") != null) {
            exploit.setTargetPort(params.get("targetPort"));
        }


        for (String i : exploitParams.keySet()) {
            if (!params.containsKey(i)) {
                errorParams.add(i);
            }
            else if (params.get(i) == null) {
                errorParams.add(i);
            }
        }

        if (!errorParams.isEmpty()) {
            for (String e : errorParams) {
                shellHelper.echoError("Param " + e + " is error.");
            }
        }
        return errorParams;
    }
}
