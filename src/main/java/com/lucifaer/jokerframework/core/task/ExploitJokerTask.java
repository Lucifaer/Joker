package com.lucifaer.jokerframework.core.task;

import com.lucifaer.jokerframework.core.context.Context;
import com.lucifaer.jokerframework.core.context.JokerContext;
import com.lucifaer.jokerframework.core.context.ShellContext;
import com.lucifaer.jokerframework.core.exploit.ExploitDispatcher;
import com.lucifaer.jokerframework.core.exploit.JokerExploit;
import com.lucifaer.jokerframework.core.factory.ExploitFactory;
import com.lucifaer.jokerframework.core.filter.ExploitFilter;
import com.lucifaer.jokerframework.core.shell.ShellHelper;
import com.lucifaer.jokerframework.core.shell.ShellThrowableHandler;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Map;

@Component
public class ExploitJokerTask implements JokerTask {
    @Autowired
    JokerContext jokerContext;

    @Autowired
    ShellHelper shellHelper;

    @Autowired
    ExploitDispatcher exploitDispatcher;

    @Autowired
    ExploitFactory exploitFactory;

    @Autowired
    ExploitFilter exploitFilter;

    @Autowired
    ShellThrowableHandler shellThrowableHandler;

    @Override
    public void createTask(ShellContext shellContext) {
        JokerExploit exploit;
        try {
            exploit = exploitDispatcher.dispatch(shellContext);
            List<String> errorParams = exploitFilter.paramsFilter(exploit, shellContext);
            if (errorParams.isEmpty()) {
                exploit.exploit(shellContext);
                shellHelper.getSuccessMessage("Create " + exploit.getExploitName() + " Successful!");
            }
        } catch (Throwable e) {
            shellThrowableHandler.handleThrowable(e);
        }
    }

    @Override
    public Context attachTask(String processId) {
        return null;
    }

    @Override
    public void stopTask(ShellContext shellContext) {

    }

    @Override
    public Map<String, JokerExploit> listTask() {
        return exploitFactory.getExistMap();
    }
}
