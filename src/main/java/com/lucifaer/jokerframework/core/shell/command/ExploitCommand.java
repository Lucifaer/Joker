package com.lucifaer.jokerframework.core.shell.command;

import com.lucifaer.jokerframework.core.context.JokerContext;
import com.lucifaer.jokerframework.core.context.ShellContext;
import com.lucifaer.jokerframework.core.exception.SessionContextNameAlreadyUsed;
import com.lucifaer.jokerframework.core.shell.ShellHelper;
import com.lucifaer.jokerframework.core.task.ExploitJokerTask;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Lookup;
import org.springframework.shell.standard.ShellComponent;
import org.springframework.shell.standard.ShellMethod;

import java.util.HashMap;
import java.util.Map;

@ShellComponent
public class ExploitCommand {
    @Autowired
    JokerContext jokerContext;

    @Autowired
    ShellHelper shellHelper;

    @Autowired
    ExploitJokerTask exploitJokerTask;

    @ShellMethod(value = "init exploit work context", key = "exp", group = "Exploit")
    public String initExploitContext(String sessionId) {
        ShellContext shellContext = shellContext();

        Map<String, String> params = new HashMap<>();

        shellContext.commandNode.push("exp");
        shellContext.setContextName(sessionId);
        shellContext.setContextType("exploit");
        shellContext.setParams(params);
        try {
            jokerContext.sessionRegister(shellContext);
        } catch (SessionContextNameAlreadyUsed e) {
            shellHelper.getErrorMessage(e.toString());
        }
        jokerContext.currentShell = shellContext;
        return shellHelper.getInfoMessage("Create exploit context " + sessionId + " successfully");
    }

    @ShellMethod(value = "execute exploit", key = "exploit", group = "Exploit")
    public void exploit(String sessionId) {
        ShellContext context = (ShellContext) jokerContext.getSessionMap().get(sessionId);
        exploitJokerTask.createTask(context);
    }

    @Lookup
    protected ShellContext shellContext() {
        return null;
    }
}
