package com.lucifaer.jokerframework.joker.core.util;

import com.lucifaer.jokerframework.sdk.api.Exploit;
import com.lucifaer.jokerframework.sdk.context.ShellContext;

import java.net.URLClassLoader;
import java.util.Map;
import java.util.concurrent.Callable;

/**
 * @author Lucifaer
 * @version 3.0
 */
public class ExploitTest2 implements Callable<Exploit> {
    private Thread thread;
    private Map pluginInfo;
    private ShellContext shellContext;

    public ExploitTest2(Map pluginInfo, ShellContext shellContext) {
        this.pluginInfo = pluginInfo;
        this.shellContext = shellContext;
    }

    @Override
    public Exploit call() throws Exception {
        Exploit exploit1 = null;
        try {
            Thread.currentThread().setContextClassLoader((ClassLoader) pluginInfo.get("classLoader"));
            URLClassLoader classLoader = (URLClassLoader) Thread.currentThread().getContextClassLoader();
            Class exploit = classLoader.loadClass((String) pluginInfo.get("referencePath"));
            exploit1 = (Exploit) exploit.newInstance();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return exploit1;
    }
}
