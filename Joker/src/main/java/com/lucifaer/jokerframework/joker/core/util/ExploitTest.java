package com.lucifaer.jokerframework.joker.core.util;

import com.lucifaer.jokerframework.sdk.context.ShellContext;

import java.lang.reflect.Method;
import java.net.URLClassLoader;
import java.util.Map;

/**
 * @author Lucifaer
 * @version 3.0
 */
public class ExploitTest implements Runnable {
    private Thread t;
    private Map pluginInfo;
    private ShellContext shellContext;

    public ExploitTest(Map pluginInfo, ShellContext shellContext) {
        this.pluginInfo = pluginInfo;
        this.shellContext = shellContext;
    }

    @Override
    public void run() {
        try {
            Thread.currentThread().setContextClassLoader((ClassLoader) pluginInfo.get("classLoader"));
            URLClassLoader classLoader = (URLClassLoader) Thread.currentThread().getContextClassLoader();
            Class exploit = classLoader.loadClass((String) pluginInfo.get("referencePath"));
            Method method = exploit.getMethod("exploit", ShellContext.class);
            method.invoke(exploit.newInstance(), shellContext);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void start() {
        if (t == null) {
            t = new Thread(this);
            t.start();
        }
    }
}
