package com.lucifaer.jokerframework.joker.core.shell.command;

import com.lucifaer.jokerframework.joker.core.context.JokerContext;
import com.lucifaer.jokerframework.joker.core.shell.ShellHelper;
import com.lucifaer.jokerframework.joker.core.task.ExploitTask;
import com.lucifaer.jokerframework.sdk.context.ShellContext;
import org.springframework.beans.factory.annotation.Lookup;
import org.springframework.shell.standard.ShellComponent;
import org.springframework.shell.standard.ShellMethod;

import java.util.HashMap;
import java.util.Map;

/**
 * @author Lucifaer
 * @version 1.0.0.RELEASE
 * @since 2020/6/4
 */
@ShellComponent
public class ExploitCommand {
    private final JokerContext jokerContext;
    private final ExploitTask exploitTask;
    private final ShellHelper shellHelper;

    public ExploitCommand(JokerContext jokerContext, ExploitTask exploitTask, ShellHelper shellHelper) {
        this.jokerContext = jokerContext;
        this.exploitTask = exploitTask;
        this.shellHelper = shellHelper;
    }

    @ShellMethod(value = "init exploit work context", key = "exp", group = "Exploit")
    public String initExploitContext(String sessionId) {
        ShellContext shellContext = shellContext();
        Map<String, String> params = new HashMap<>();

        shellContext.commandNode.push("exp");
        shellContext.setContextName(sessionId);
        shellContext.setContextType("exploit");
        shellContext.setParams(params);

        jokerContext.sessionRegister(shellContext);

        jokerContext.setCurrentShell(shellContext);
        return shellHelper.getSuccessMessage("Create exploit context " + sessionId + " success!");
    }

    @ShellMethod(value = "execute exploit", key = "exploit", group = "Exploit")
    public void exploit(String sessionId) {
        ShellContext shellContext = (ShellContext) jokerContext.getSessionMap().get(sessionId);
        exploitTask.createTask(shellContext);
    }

    @Lookup
    protected ShellContext shellContext() {
        return null;
    }
}
