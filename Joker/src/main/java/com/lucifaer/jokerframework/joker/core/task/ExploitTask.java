package com.lucifaer.jokerframework.joker.core.task;

import com.lucifaer.jokerframework.joker.core.context.JokerContext;
import com.lucifaer.jokerframework.joker.core.exploit.ExploitProxy;
import com.lucifaer.jokerframework.joker.core.factory.ExploitFactory;
import com.lucifaer.jokerframework.sdk.context.ShellContext;
import com.lucifaer.jokerframework.joker.core.dispatcher.ExploitDispatcher;
import com.lucifaer.jokerframework.joker.core.factory.BaseFactory;
import com.lucifaer.jokerframework.joker.core.shell.ShellHelper;
import com.lucifaer.jokerframework.sdk.api.Exploit;
import org.springframework.stereotype.Component;

import java.util.Map;

/**
 * @author Lucifaer
 * @version 3.0
 */
@Component
public class ExploitTask implements Task {
    private final ExploitDispatcher exploitDispatcher;
//    private final BaseFactory<Exploit> exploitFactory;
    private final ExploitFactory exploitFactory;
    private final JokerContext jokerContext;
    private final ShellHelper shellHelper;

    public ExploitTask(ExploitDispatcher exploitDispatcher, ExploitFactory exploitFactory, JokerContext jokerContext, ShellHelper shellHelper) {
        this.exploitDispatcher = exploitDispatcher;
        this.exploitFactory = exploitFactory;
        this.jokerContext = jokerContext;
        this.shellHelper = shellHelper;
    }

    @Override
    public void createTask(ShellContext shellContext) {
        Exploit exploit;
        exploit = exploitDispatcher.dispatcher(shellContext);

        ExploitProxy exploitProxy = new ExploitProxy(exploit, exploitFactory.getExploitInfo(exploit.getName()), shellContext);
        exploitProxy.exploit();
    }

    @Override
    public void stopTask(ShellContext shellContext) {
        shellHelper.echoError("No stop task usage!");
    }

    @Override
    public Map<String, Exploit> listTask() {
        return exploitFactory.getExistMap();
    }
}
