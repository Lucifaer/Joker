package com.lucifaer.jokerframework.joker.core.task;

import com.lucifaer.jokerframework.joker.core.dispatcher.ExploitDispatcher;
import com.lucifaer.jokerframework.joker.core.exploit.ExploitExecutor;
import com.lucifaer.jokerframework.joker.core.factory.ExploitFactory;
import com.lucifaer.jokerframework.sdk.model.ExploitModel;
import com.lucifaer.jokerframework.joker.core.shell.ShellHelper;
import com.lucifaer.jokerframework.sdk.api.Exploit;
import com.lucifaer.jokerframework.sdk.context.ShellContext;
import org.springframework.stereotype.Component;

import java.util.Map;

/**
 * @author Lucifaer
 * @version 1.0.0.RELEASE
 * @since 2020/6/3
 */
@Component
public class ExploitTask implements Task {
    private ExploitDispatcher exploitDispatcher;
    private ExploitFactory exploitFactory;
    private ShellHelper shellHelper;

    public ExploitTask(ExploitDispatcher exploitDispatcher, ExploitFactory exploitFactory, ShellHelper shellHelper) {
        this.exploitDispatcher = exploitDispatcher;
        this.exploitFactory = exploitFactory;
        this.shellHelper = shellHelper;
    }

    @Override
    public void createTask(ShellContext shellContext) {
        Exploit exploit;
        exploit = (Exploit) exploitDispatcher.dispatch(shellContext);
        ExploitExecutor exploitExecutor = ExploitExecutor.init(exploit, exploitFactory.getExistMap().get(exploit.getExploitName()), shellContext);
        exploitExecutor.exploit();
    }

    @Override
    public void stopTask(ShellContext shellContext) {
        shellHelper.echoError("No stop task usage!");
    }

    @Override
    public Map<String, ExploitModel> listTask() {
        return exploitFactory.getExistMap();
    }
}
